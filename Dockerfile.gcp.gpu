# Torch 2.5.1 + CUDA 12.4 + cuDNN9 (Python 3.10)# FROM pytorch/pytorch:2.6.0-cuda12.6-cudnn9-runtime
FROM pytorch/pytorch:2.5.0-cuda12.1-cudnn9-runtime

ENV DEBIAN_FRONTEND=noninteractive PIP_NO_CACHE_DIR=1
WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential cmake git && rm -rf /var/lib/apt/lists/*

# Requirements for compiling extensions (madmom)
RUN python -m pip install --upgrade pip \
 && pip install "cython>=0.29" "numpy>=1.23" "scipy>=1.10"

# NATTEN que MATCHEA Torch 2.6.0 + cu12.6 GPU CUDA
# RUN pip install "natten==0.17.5+torch260cu126" -f https://whl.natten.org
# NATTEN que MATCHEA Torch 2.5.0 + cu12.1 GPU CUDA
RUN pip install "natten==0.17.5+torch250cu121" -f https://whl.natten.org

# madmom from git with submodules (avoids issues with Py>=3.10)
RUN git clone --depth=1 --branch main --recurse-submodules \
      https://github.com/CPJKU/madmom /tmp/madmom \
 && cd /tmp/madmom && git submodule update --init --recursive \
 && python -m pip install .

# GCP buckets access and huggingface_hub for model downloads
RUN pip install google-cloud-storage huggingface_hub

COPY . .
RUN pip install -e .

RUN mkdir -p /app/output

# Pre-download all models to avoid downloading them during each execution
# Download model files directly using huggingface_hub without loading the models
RUN python -c "from huggingface_hub import hf_hub_download; \
models = ['harmonix-fold0-0vra4ys2.pth', 'harmonix-fold1-3ozjhtsj.pth', 'harmonix-fold2-gmgo0nsy.pth', 'harmonix-fold3-i92b7m8p.pth', 'harmonix-fold4-1bql5qo0.pth', 'harmonix-fold5-x4z5zeef.pth', 'harmonix-fold6-x7t226rq.pth', 'harmonix-fold7-qwwskhg6.pth']; \
[hf_hub_download(repo_id='taejunkim/allinone', filename=model, cache_dir='/root/.cache/huggingface/hub') for model in models]; \
print('All models downloaded successfully')"

# Sanity check
# RUN python -c "import torch, natten; print('Torch:', torch.__version__); print('CUDA :', torch.version.cuda); print('NATTEN:', natten.__version__); from natten import libnatten; print('libnatten OK')"

CMD ["python", "process_audio.py"]